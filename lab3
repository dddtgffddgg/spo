#include <windows.h>

#define ID_FILE_OPEN 1001
#define ID_FILE_SAVE 1002
#define ID_EDIT_COPY 1003
#define ID_EDIT_PASTE 1004
#define ID_EDIT_CUT 1005
#define ID_HELP_ABOUT 1006

LRESULT CALLBACK WndProc(HWND hWnd, UINT msg, WPARAM wParam, LPARAM lParam);

int WINAPI WinMain(HINSTANCE hInstance, HINSTANCE hPrevInstance, LPSTR lpCmdLine, int nCmdShow) {
    // Регистрация класса окна
    WNDCLASS wc = {0};
    wc.lpfnWndProc = WndProc;
    wc.hInstance = hInstance;
    wc.lpszClassName = "SimpleTextEditor";
    wc.hbrBackground = (HBRUSH)(COLOR_WINDOW + 1);
    RegisterClass(&wc);

    // Создание окна приложения
    HWND hWnd = CreateWindowEx(
        0, "SimpleTextEditor", "Simple Text Editor",
        WS_OVERLAPPEDWINDOW, CW_USEDEFAULT, CW_USEDEFAULT,
        800, 600, NULL, NULL, hInstance, NULL);

    // Показать окно
    ShowWindow(hWnd, nCmdShow);

    // Запуск цикла обработки сообщений
    MSG msg = {0};
    while (GetMessage(&msg, NULL, 0, 0)) {
        TranslateMessage(&msg);
        DispatchMessage(&msg);
    }

    return msg.wParam;
}

LRESULT CALLBACK WndProc(HWND hWnd, UINT msg, WPARAM wParam, LPARAM lParam) {
    switch (msg) {
        case WM_CREATE: {
            // Создание элементов управления
            CreateWindow("EDIT", "", WS_CHILD | WS_VISIBLE | WS_BORDER | ES_MULTILINE | ES_AUTOVSCROLL | ES_AUTOHSCROLL,
                         0, 0, 800, 600, hWnd, NULL, NULL, NULL);
            // Создание меню
            HMENU hMenu = CreateMenu();
            HMENU hFileMenu = CreatePopupMenu();
            AppendMenu(hFileMenu, MF_STRING, ID_FILE_OPEN, "&Open");
            AppendMenu(hFileMenu, MF_STRING, ID_FILE_SAVE, "&Save");
            AppendMenu(hMenu, MF_STRING | MF_POPUP, (UINT_PTR)hFileMenu, "&File");

            HMENU hEditMenu = CreatePopupMenu();
            AppendMenu(hEditMenu, MF_STRING, ID_EDIT_COPY, "&Copy");
            AppendMenu(hEditMenu, MF_STRING, ID_EDIT_PASTE, "&Paste");
            AppendMenu(hEditMenu, MF_STRING, ID_EDIT_CUT, "Cu&t");
            AppendMenu(hMenu, MF_STRING | MF_POPUP, (UINT_PTR)hEditMenu, "&Edit");

            HMENU hHelpMenu = CreatePopupMenu();
            AppendMenu(hHelpMenu, MF_STRING, ID_HELP_ABOUT, "&About");
            AppendMenu(hMenu, MF_STRING | MF_POPUP, (UINT_PTR)hHelpMenu, "&Help");

            SetMenu(hWnd, hMenu);
            break;
        }
        case WM_COMMAND: {
            switch (LOWORD(wParam)) {
                case ID_FILE_OPEN:
                    MessageBox(hWnd, "Open file function not implemented yet.", "Info", MB_OK | MB_ICONINFORMATION);
                    break;
                case ID_FILE_SAVE:
                    MessageBox(hWnd, "Save file function not implemented yet.", "Info", MB_OK | MB_ICONINFORMATION);
                    break;
                case ID_EDIT_COPY:
                    MessageBox(hWnd, "Copy function not implemented yet.", "Info", MB_OK | MB_ICONINFORMATION);
                    break;
                case ID_EDIT_PASTE:
                    MessageBox(hWnd, "Paste function not implemented yet.", "Info", MB_OK | MB_ICONINFORMATION);
                    break;
                case ID_EDIT_CUT:
                    MessageBox(hWnd, "Cut function not implemented yet.", "Info", MB_OK | MB_ICONINFORMATION);
                    break;
                case ID_HELP_ABOUT:
                    MessageBox(hWnd, "Simple Text Editor\nVersion 1.0", "About", MB_OK | MB_ICONINFORMATION);
                    break;
            }
            break;
        }
        case WM_DESTROY:
            PostQuitMessage(0);
            break;
        default:
            return DefWindowProc(hWnd, msg, wParam, lParam);
    }
    return 0;
}
